name: Flow Validation
on:
  push:
    branches: [master, '9.0']
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      matrix-unit: ${{ steps.set-matrix.outputs.matrix-unit }}
      matrix-it: ${{ steps.set-matrix.outputs.matrix-it }}
    steps:
      - name: Check Secrets
        run: |
          TB_LICENSE="${{secrets.TB_LICENSE}}"
          [ -z "TB_LICENSE" ] && echo "::error::!! ERROR NO TB_LICENSE: Check if the PR is from an external contributor !!" && exit 1 || exit 0
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.0'
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Set flow version to 999.99-SNAPSHOT
        run: |
          ./scripts/computeMatrix.js set-version --version=999.99-SNAPSHOT
      - name: Generate matrices
        id: set-matrix
        run: |
          echo "::set-output name=matrix-it::$(./scripts/computeMatrix.js it-tests --parallel=13 current module args)"
      - name: Compile and Install Flow
        run: |
          cmd="mvn install -B -DskipTests  -pl \!flow-plugins/flow-gradle-plugin"
          eval $cmd -T 2C -q || eval $cmd
      - name: Save workspace
        run: |
          tar cf workspace.tar -C ~/ .m2
          tar rf workspace.tar `find . -name target -o -name "pom*xml"`
      - uses: actions/upload-artifact@v2
        with:
          name: saved-workspace
          path: workspace.tar
  it-tests:
    needs: build
    timeout-minutes: 20
    outputs:
      failure: ${{steps.set-failure.outputs.failure}}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.build.outputs.matrix-it)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: '5.15.0'
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - uses: nanasess/setup-chromedriver@master
      - uses: actions/download-artifact@v2
        with:
          name: saved-workspace
      - name: Restore Workspace
        run: |
          tar xf workspace.tar
          rm -rf ~/.m2 && mv -f .m2 ~/
      - name: Set TB License
        run: |
          TB_LICENSE=${{secrets.TB_LICENSE}}
          mkdir -p ~/.vaadin/
          echo '{"username":"'`echo $TB_LICENSE | cut -d / -f1`'","proKey":"'`echo $TB_LICENSE | cut -d / -f2`'"}' > ~/.vaadin/proKey
      - name: Show ports
        run: |
          sudo lsof -i -P -n | grep LISTEN
      - name: Compile Shared modules
        run: |
          if [ ${{matrix.current}} -eq 2 -o ${{matrix.current}} -eq 3 ]; then
            cmd="mvn install -B -DskipTests -Pit-shared-modules -amd -pl flow-tests"
            $cmd -T 1C || $cmd
          fi
          if [ ${{matrix.current}} -eq 4 -o ${{matrix.current}} -eq 5 ]; then
            cmd="mvn install -B -DskipTests -Pit-shared-spring-modules -amd -pl flow-tests"
            $cmd -T 1C || $cmd
          fi
      - name: Run ITs
        run: |
          echo TESTING: ${{ strategy.job-index }} ${{matrix.module}} ${{ matrix.args }}
          [ -n "${{matrix.module}}" ] && \
            ARGS="-Dfailsafe.forkCount=4 -pl ${{matrix.module}} -Dit.test=${{matrix.args}}" || \
            ARGS="-pl ${{matrix.args}}"
          cmd="mvn -V -B -e -fae -Dcom.vaadin.testbench.Parameters.testsInParallel=5 -Dfailsafe.rerunFailingTestsCount=2 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 $ARGS"
          set -x -e -o pipefail
          $cmd verify | tee -a mvn-it-tests-${{matrix.current}}.out
      - name: Set build status flag
        id: set-failure
        if: ${{ failure() || cancelled() }}
        run: echo "::set-output name=failure::true"
      - uses: actions/upload-artifact@v2
        if: ${{ failure() || success() }}
        with:
          name: test-reports
          path: |
            **/target/*-reports/*
            **/error-screenshots/*.png
            mvn-*.out
